name: Shared GitHub Enterprise Cloud GEI Migration

on:
  workflow_call:
    secrets:
      TARGET_ADMIN_TOKEN:
        required: true
      SOURCE_ADMIN_TOKEN:
        required: true
      AZURE_STORAGE_CONNECTION_STRING:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  contents: read
  issues: write

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      repositories: ${{ steps.json.outputs.repositories }}
      migration-type: ${{ steps.migration-type.outputs.result }}
      parsed-issue: ${{ steps.parse-issue-body.outputs.jsonString }}

    if: github.event_name == 'issue_comment' &&
      (contains(github.event.comment.body, '/run-dry-run-migration') ||
      contains(github.event.comment.body, '/run-production-migration'))

    steps:
      - name: Check out scripts
        uses: actions/checkout@v3

      - name: Parse issue body
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3

      - run: echo $JSON_STRING
        env:
          JSON_STRING: ${{ steps.parse-issue-body.outputs.jsonString }}

      - name: Set migration type
        uses: actions/github-script@v6
        id: migration-type
        with:
          result-encoding: string
          script: |
            return context.payload.comment.body.match('dry-run') ? 'Dry-run' : 'Production'
      - name: Set migration type and lock selection
        id: set-variables
        run: |
          echo "migration_type=${{ github.event.inputs.migration_type }}" >> $GITHUB_ENV
          echo "lock_source_repo=${{ github.event.inputs.lock_source_repo }}" >> $GITHUB_ENV

      - name: Create lock flag based on inputs
        uses: actions/github-script@v6
        id: lock-flag
        with:
          result-encoding: string
          script: |
            const migrationType = process.env.migration_type;
            const lockSelection = process.env.lock_source_repo;
            return migrationType === 'Production' && lockSelection === 'Yes' ? '--lock-source-repo' : '';

      - name: Check lock flag result
        run: |
          if [ "${{ steps.lock-flag.outputs.result }}" == "--lock-source-repo" ]; then
            echo "Lock flag is set: ${{ steps.lock-flag.outputs.result }}"
          else
            echo "Lock flag is not set."
          fi
